name: Notify on Workflow Failure

on:
  workflow_run:
    workflows: ["Sample Workflow"]
    types:
      - completed

jobs:
  notify-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch Workflow Run Details
        id: fetch-details
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const runId = "${{ github.event.workflow_run.id }}";
            const runData = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId
            });
            return runData.data;
          debug: true

      - name: Process Each Failed Job
        uses: actions/github-script@v7
        with:
          script: |
            const runData = ${{ fromJSON(steps.fetch-details.outputs.result) }};
            const jobs = runData.jobs;
            const failureLabel = 'workflow-failure';
            const pr = runData.pull_requests && runData.pull_requests.length > 0 ? runData.pull_requests[0] : null;
            const prLink = pr ? pr.html_url : 'PR link not available';
            const prAuthor = pr ? pr.user.login : 'Author not available';
            const prMerger = runData.merged_by ? runData.merged_by.login : 'Merger not available';

            for (const job of jobs) {
              if (job.conclusion == 'failure') {
                const jobName = job.name;
                const issues = await github.rest.issues.listForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  labels: failureLabel,
                  state: 'open'
                });
                const existingIssue = issues.data.find(issue => issue.title.includes(jobName));
                if (!existingIssue) {
                  const issueTitle = `🔍 Investigation Needed: ${jobName} Failure due to PR Merge 🔍`;
                  const issueBody = `🚨 **Failure Summary** 🚨:\n\n
                  - **📋 Job Name**: [${jobName}](${job.html_url})\n
                  - **🔧 Failure in Workflow**: Main branch\n
                  - **🔗 Triggered by PR**: [PR Link](${prLink})\n
                  - **👤 PR Author**: @${prAuthor}\n
                  - **🤝 Merged by**: @${prMerger}\n\n
                  ⚠️ **Action Required** ⚠️:\n\n
                  🛠️ A recent merge appears to have caused a failure in the job named [${jobName}](${job.html_url}).
                  This issue has been automatically created and labeled with \`${failureLabel}\` for investigation. \n\n
                  👀 **Please look into the following**:\n
                  1. **Why the PR caused the job to fail?**\n
                  2. **Address any underlying issues.**\n\n
                  🐛 We appreciate your help in squashing this bug!`;
                  await github.rest.issues.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    title: issueTitle,
                    body: issueBody,
                    labels: [failureLabel],
                    assignees: [context.actor, prAuthor]
                  });
                }
              }
            }
