name: Notify on Workflow Failure

on:
  workflow_run:
    workflows: ["sample-worflow.yml"]
    types:
      - completed

permissions:
  issues: write

jobs:
  notify-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          debug: true

      - name: Fetch Workflow Run Jobs
        id: fetch-workflow-jobs
        uses: actions/github-script@v7
        with:
          debug: true
          script: |
            const runId = "${{ github.event.workflow_run.id }}";
            console.log(`Fetching jobs for workflow run ID: ${runId}`);
            const jobsData = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId,
            });
            console.log(`Workflow Run Jobs Data:`, jobsData.data);
            return jobsData.data;
      

      - name: Process Each Failed Job
        uses: actions/github-script@v7
        with:
          debug: true
          script: |
            const jobs = ${{steps.fetch-workflow-jobs.outputs.result}};
            console.log(`Jobs: ${jobs}`);
            const failureLabel = 'workflow-failure';

            const headCommit = "${{ github.event.workflow_run.head_commit.id }}";
            console.log(`headCommit: ${headCommit} `);

            const prs = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: headCommit,
            });

            const pr = prs.data[0];
            const prLink = pr.html_url;
            const prAuthor = pr.user.login;
            const prMerger = "${{ github.event.workflow_run.actor.login }}";

            console.log(`Processing failed jobs, total count: ${jobs.total_count}`);
            for (let i=0; i<jobs.total_count; i++) {
              if (jobs.jobs[i].conclusion == 'failure') {
                const jobName = jobs.jobs[i].name;
                const jobLink = jobs.jobs[i].html_url;

                console.log(`Processing failed job: ${jobName}`);
                const issues = await github.rest.issues.listForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  labels: failureLabel,
                  state: 'open'
                });

                const existingIssue = issues.data.find(issue => issue.title.includes(jobName));
                console.log(`Existing issue for job ${jobName}:`, existingIssue);
                
                if (!existingIssue) {
                  const issueTitle = `üîç Investigation Needed: ${jobName} Failure due to PR Merge üîç`;
                  const issueBody = `üö® **Failure Summary** üö®:\n\n` +
                  `- **üìã Job Name**: [${jobName}](${jobLink})\n` +
                  `- **üîß Failure in Workflow**: Main branch\n` +
                  `- **üîó Triggered by PR**: [PR Link](${prLink})\n` +
                  `- **üë§ PR Author**: @${prAuthor}\n` +
                  `- **ü§ù Merged by**: @${prMerger}\n\n` +
                  `‚ö†Ô∏è **Action Required** ‚ö†Ô∏è:\n\n` +
                  `üõ†Ô∏è A recent merge appears to have caused a failure in the job named [${jobName}](${jobLink}).\n` +
                  `This issue has been automatically created and labeled with \`${failureLabel}\` for investigation. \n\n` +
                  `üëÄ **Please look into the following**:\n` +
                  `1. **Why the PR caused the job to fail?**\n` +
                  `2. **Address any underlying issues.**\n\n` +
                  `üêõ We appreciate your help in squashing this bug!`;
                  console.log(`Creating issue for job ${jobName}`);
                  github.rest.issues.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    title: issueTitle,
                    body: issueBody,
                    labels: [failureLabel,'daily'],
                    assignees: [prMerger, prAuthor]
                  });
                }
              }
            }
